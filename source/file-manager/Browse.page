Title=""
Tag="home"
Nchan="file_manager"
---
<?PHP
/* Copyright 2005-2023, Lime Technology
 * Copyright 2012-2023, Bergware International.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License version 2,
 * as published by the Free Software Foundation.
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 */
?>
<?
function validdir($dir) {
  $path = realpath($dir);
  return in_array(explode('/',$path)[1]??'',['mnt','boot']) ? $path : '';
}
function quote($text) {
  return "\"$text\"";
}
function jsArray($array) {
  return implode(',',array_map('quote',$array));
}
$zfs     = is_executable('/usr/sbin/zfs');
$dir     = validdir(htmlspecialchars_decode($dir));
[$none,$root,$main,$next,$rest] = my_explode('/',$dir,5);
$dir     = htmlspecialchars(str_replace('\\','\\\\',$dir));
$lock    = $root=='mnt' ? ($main ?: '---') : ($root=='boot' ? _('flash') : '---');
$isshare = $root=='mnt' && (!$main || !$next || ($main=='rootshare' && !$rest));
$hover   = in_array($theme,['white','azure']) ? 'rgba(0,0,0,0.1)' : 'rgba(255,255,255,0.1)';
$bgcolor = in_array($theme,['white','azure']) ? '#f2f2f2' : '#1c1c1c';
$fgcolor = in_array($theme,['white','azure']) ? '#1c1c1c' : '#f2f2f2';
$incolor = $theme!='gray' ? $bgcolor : '#121510';
$Folder  = $lock=='---' ? 'Device' : ($isshare ? 'Share' : 'Folder');
$folder  = strtolower($Folder);
$editor  = '/boot/config/editor.cfg';
$newos   = version_compare(parse_ini_file('/etc/unraid-version')['version'],'6.11.9','>');

if (!file_exists($editor)) file_put_contents($editor,implode("\n",['','txt','js','php','page','plg','xml','old','bak','log','css']));
?>
<link type="text/css" rel="stylesheet" href="<?autov("/webGui/styles/jquery.ui.css")?>">
<link type="text/css" rel="stylesheet" href="<?autov("/webGui/styles/jquery.filetree.css")?>">
<link type="text/css" rel="stylesheet" href="<?autov("/webGui/styles/jquery.switchbutton.css")?>">
<link type="text/css" rel="stylesheet" href="<?autov("/plugins/dynamix.docker.manager/styles/style-$theme.css")?>">

<style>
div#ace_settingsmenu,table#controls,table#more-controls{margin-top:0;background-color:#f2f2f2}
tr.ace_optionsMenuEntry td{padding:4px;color:#1c1b1b}
tr.ace_optionsMenuEntry td select option{color:#1c1b1b;background-color:#e8e8e8}
<?if ($theme=='black'):?>
tr.ace_optionsMenuEntry td select{color:#1c1b1b;border-bottom:1px solid #1c1b1b;background-image:linear-gradient(66.6deg,transparent 60%,#1c1b1b 40%),linear-gradient(113.4deg, #1c1b1b 40%,transparent 60%)}
tr.ace_optionsMenuEntry td input[type=number]{color:#1c1b1b}
<?endif;?>
tr.ace_optionsMenuEntry td input[type=number]::-webkit-inner-spin-button{-webkit-appearance:auto;cursor:pointer}
tr.ace_optionsMenuEntry td input[type=number]{-moz-appearance:auto;margin:0}

.loc{text-align:left!important;padding-left:0!important}
<?if ($newos):?>
.title span.left{text-transform:none}
.title{letter-spacing:1px}
<?else:?>
#title{letter-spacing:1px}
#title span.left{text-transform:none}
<?endif;?>
table.tablesorter.indexer{margin-top:0}
table.tablesorter.indexer thead th:nth-child(1){width:12px;text-align:left;padding-left:11px}
table.tablesorter.indexer thead th:nth-child(2){width:3%!important}
table.tablesorter.indexer thead th:nth-child(3){width:auto!important}
table.tablesorter.indexer thead th:nth-child(n+4){width:10%!important}
table.tablesorter.indexer thead th:nth-child(9){width:3%!important}
table.tablesorter.indexer tbody tr:hover td{background-color:<?=$hover?>}
table.tablesorter.indexer thead th{text-align:left}
table.tablesorter.indexer tbody td{text-align:left}
table.tablesorter.indexer thead th:last-child{text-align:right}
table.tablesorter.indexer tbody td:last-child{text-align:right}
i[id^="row_"],i[id^="check_"]{cursor:pointer;font-size:1.8rem;color:gray}
td[id^="name_"]{cursor:pointer}
i.fa-warning,i.fa-refresh{margin-right:8px}
i.fa-home{font-size:2rem}
i.fa-chevron-right{font-size:1.2rem;margin:0 8px}
input#target{color:<?=$fgcolor?>;width:500px}
div.autoheight{width:100%;overflow-y:auto;margin-top:<?=$themes1?'-30px':'0'?>}
div.info{position:absolute;bottom:4px;width:74%;margin-left:23%}
div.template,div#dialogWindow,input#upload{display:none}
span.filter{position:relative;margin-left:<?=$themes1?'12':'0'?>px;top:-<?=$themes1?'2':'8'?>px}
span.filter i{position:absolute;left:10px;top:<?=$themes1?'4':'8'?>px;font-size:1.4rem}
span.dfm_loc{display:inline-block}
span.dfm_text{display:inline-block;width:75%;white-space:normal}
span.device{display:inline-block;float:left}
span.percent{display:inline-block;width:40px}
span.speed{display:inline-block;margin-left:10px;width:140px}
input.filter{border:none;width:100px;background-color:<?=$incolor?>;margin:-8px 0 0 0;padding-left:30px}
input.filter:focus{background-color:<?=$incolor?>}
input#sparse,input#exist{margin-left:0}
dt{width:23%}
select.narrow{margin:0 40px 0 10px}
select#source{min-width:none;max-width:none;border:none;background-image:none;width:660px}
select#source option{background-color:transparent}
.fileTree{background:<?=$bgcolor?>;width:500px;max-height:320px;overflow-y:scroll;overflow-x:hidden;position:absolute;z-index:100;display:none}
.ui-dialog .ui-dialog-buttonpane .ui-dialog-buttonset button[disabled]{cursor:default;color:#808080;background:-webkit-gradient(linear,left top,right top,from(#404040),to(#808080)) 0 0 no-repeat,-webkit-gradient(linear,left top,right top,from(#404040),to(#808080)) 0 100% no-repeat,-webkit-gradient(linear,left bottom,left top,from(#404040),to(#404040)) 0 100% no-repeat,-webkit-gradient(linear,left bottom,left top,from(#808080),to(#808080)) 100% 100% no-repeat;background:linear-gradient(90deg,#404040 0,#808080) 0 0 no-repeat,linear-gradient(90deg,#404040 0,#808080) 0 100% no-repeat,linear-gradient(0deg,#404040 0,#404040) 0 100% no-repeat,linear-gradient(0deg,#808080 0,#808080) 100% 100% no-repeat;background-size:100% 2px,100% 2px,2px 100%,2px 100%}
.dropdown-menu{z-index:10001;
</style>

<script src="<?autov("/webGui/javascript/jquery.filetree.js")?>"></script>
<script src="<?autov("/webGui/javascript/jquery.switchbutton.js")?>"></script>
<script>
// Prototypes
String.prototype.patch = function(){return this.replace('rw','x+rw').replace('r-','wx+r').replace('--','rwx');}
String.prototype.proxy = function(){return this.replace('name','row');}
String.prototype.fetch = function(tag){return this.replace('check',tag);}
String.prototype.bring = function(tag){return this.replace('row',tag);}
String.prototype.strip = function(){return this.replace(/\/$/,'');}
String.prototype.quote = function(){return this.replace(/&#34;/g,'"');}
String.prototype.alter = function(...a){var t=this;for(var i=0;i<a.length;i+=2){t=t.replace(a[i],a[i+1]);} return t;}
String.prototype.build = function(){return this.replace(/\n(<!--!|!-->)\n/g,'');}

// General variables
var dir = "<?=$dir?>";
var table = null;
var thead = null;
var tsize = {0:0,1:6,2:3,3:3,4:3,11:2,12:2,14:0,15:0};

function htmlspecialchars(text) {
  var map = {'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#039;'};
  return text.replace(/[&<>"']/g,function(m){return map[m];});
}
function autoscale(value) {
  var unit = ['B','kB','MB','GB','TB','PB','EB'];
  var base = value>1?Math.floor(Math.log(value)/Math.log(1000)):0;
  var data = base<unit.length ? value/Math.pow(1000, base) : 0;
  var scale = data<100?100:10;
  if (data==0) base=0;
  return ((Math.round(scale*data)/scale)+' '+unit[base]).replace('.','<?=$display['number'][0]?>')+'/s';
}
function folderContextMenu(id,button) {
  var opts = [];
  context.settings({button:button,right:false});
  opts.push({header:"_(Action)_"});
  opts.push({text:"_(Delete)_", icon:"fa-trash-o", action:function(e){e.preventDefault();doAction(1,"_(Delete)_",id.proxy());}});
  opts.push({text:"_(Copy)_", icon:"fa-copy", action:function(e){e.preventDefault();doAction(3,"_(Copy)_",id.proxy());}});
  opts.push({text:"_(Move)_", icon:"fa-paste", action:function(e){e.preventDefault();doAction(4,"_(Move)_",id.proxy());}});
<?if (!$isshare):?>
  opts.push({text:"_(Rename)_", icon:"fa-edit", action:function(e){e.preventDefault();doAction(2,"_(Rename)_",id.proxy());}});
<?endif?>
  opts.push({divider:true});
  opts.push({text:"_(Owner)_", icon:"fa-user-o", action:function(e){e.preventDefault();doAction(11,"_(Change Owner)_",id.proxy());}});
  opts.push({text:"_(Permission)_", icon:"fa-address-book-o", action:function(e){e.preventDefault();doAction(12,"_(Change Permission)_",id.proxy());}});
  opts.push({text:"_(Calculate)_", icon:"fa-calculator", action:function(e){e.preventDefault();doAction(14,"_(Calculate Occupied Space)_",id.proxy());}});
<?if (!$isshare):?>
  opts.push({header:"_(Common)_"});
  opts.push({text:"_(Create)_", icon:"fa-folder-o", action:function(e){e.preventDefault();doAction(0,"_(Create)_",id.proxy());}});
<?if ($dir):?>
  opts.push({text:"_(Upload)_", icon:"fa-upload", action:function(e){e.preventDefault();$('#upload').click();}});
<?endif?>
<?endif?>
  context.attach('#'+id, opts);
}
function fileContextMenu(id,button) {
  var opts = [];
  context.settings({button:button,right:false});
  opts.push({header:"_(Action)_"});
  opts.push({text:"_(Delete)_", icon:"fa-trash-o", action:function(e){e.preventDefault();doAction(6,"_(Delete)_",id.proxy());}});
  opts.push({text:"_(Copy)_", icon:"fa-copy", action:function(e){e.preventDefault();doAction(8,"_(Copy)_",id.proxy());}});
  opts.push({text:"_(Move)_", icon:"fa-paste", action:function(e){e.preventDefault();doAction(9,"_(Move)_",id.proxy());}});
  opts.push({text:"_(Rename)_", icon:"fa-edit", action:function(e){e.preventDefault();doAction(7,"_(Rename)_",id.proxy());}});
  opts.push({divider:true});
  opts.push({text:"_(Owner)_", icon:"fa-user-o", action:function(e){e.preventDefault();doAction(11,"_(Change Owner)_",id.proxy());}});
  opts.push({text:"_(Permission)_", icon:"fa-address-book-o", action:function(e){e.preventDefault();doAction(12,"_(Change Permission)_",id.proxy());}});
  opts.push({text:"_(Download)_", icon:"fa-download", action:function(e){e.preventDefault();doAction(13,"_(Download)_",id.proxy());}});
<?if (!$isshare):?>
  opts.push({header:"_(Common)_"});
  opts.push({text:"_(Create)_", icon:"fa-folder-o", action:function(e){e.preventDefault();doAction(0,"_(Create)_",id.proxy());}});
<?if ($dir):?>
  opts.push({text:"_(Upload)_", icon:"fa-upload", action:function(e){e.preventDefault();$('#upload').click();}});
<?endif?>
<?endif?>
  context.attach('#'+id, opts);
}
function deviceFolderContextMenu(dev,id) {
  var opts = [];
  context.settings({button:'both',right:false});
  opts.push({header:dev.split('/')[2]});
  opts.push({text:"_(Delete)_", icon:"fa-trash-o", action:function(e){e.preventDefault();doAction(1,"_('Delete')_",dev);}});
  opts.push({text:"_(Copy)_", icon:"fa-copy", action:function(e){e.preventDefault();doAction(3,"_('Copy')_",dev);}});
  opts.push({text:"_(Move)_", icon:"fa-paste", action:function(e){e.preventDefault();doAction(4,"_('Move')_",dev);}});
  opts.push({divider:true});
  opts.push({text:"_(Calculate)_", icon:"fa-calculator", action:function(e){e.preventDefault();doAction(14,"_(Calculate Occupied Space)_",dev);}});
  context.attach('#device_'+id, opts);
}
function deviceFileContextMenu(dev,id) {
  var opts = [];
  context.settings({button:'both',right:false});
  opts.push({header:dev.split('/')[2]});
  opts.push({text:"_(Delete)_", icon:"fa-trash-o", action:function(e){e.preventDefault();doAction(6,"_(Delete)_",dev);}});
  opts.push({text:"_(Copy)_", icon:"fa-copy", action:function(e){e.preventDefault();doAction(8,"_(Copy)_",dev);}});
  opts.push({text:"_(Move)_", icon:"fa-paste", action:function(e){e.preventDefault();doAction(9,"_(Move)_",dev);}});
  context.attach('#device_'+id, opts);
}
function resize() {
  $('div.autoheight').height(Math.max(window.innerHeight-320,330));
}
function selectAll() {
  if ($('#check_0').hasClass('fa-square-o')) {
    $('i[id^="check_"]:visible').removeClass('fa-square-o').addClass('fa-check-square-o');
    $('input[class="extra"]').prop('disabled',false);
<?if (!$isshare):?>
    $('input[class="rename"]').prop('disabled',false);
<?endif;?>
  } else {
    $('i[id^="check_"]:visible').removeClass('fa-check-square-o').addClass('fa-square-o');
    $('input[class="extra"]').prop('disabled',true);
<?if (!$isshare):?>
    $('input[class="rename"]').prop('disabled',true);
<?endif;?>
  }
}
function selectOne(id) {
  if ($('#'+id).hasClass('fa-square-o')) {
    $('#'+id).removeClass('fa-square-o').addClass('fa-check-square-o');
  } else {
    $('#'+id).removeClass('fa-check-square-o').addClass('fa-square-o');
  }
  var checked = 0;
  $('i[id^="check_"]').each(function(){if ($(this).prop('id')!='check_0' && $(this).hasClass('fa-check-square-o')) checked++;});
  $('input[class="extra"]').prop('disabled',checked==0);
<?if (!$isshare):?>
  $('input[class="rename"]').prop('disabled',checked==0);
<?endif;?>
}
function errorSource() {
  swal({title:"_(Invalid source)_",text:"_(Not allowed to mix disk and user shares)_",html:true,type:'error',confirmButtonText:"_(Ok)_"});
}
function errorTarget() {
  swal({title:"_(Invalid target)_",text:"_(Enter a valid target)_",html:true,type:'error',confirmButtonText:"_(Ok)_"});
}
function data(id) {
  var data = id.attr('data').quote();
<?if ($isshare):?>
  return id.attr('type')=='d' ? data+'/' : data;
<?else:?>
  return data;
<?endif;?>
}
function escapeHTML(name) {
  const data = document.createElement('div');
  const text = document.createTextNode(name);
  data.appendChild(text);
  return data.innerHTML;
}
function openDialog() {
  $('#countdown').hide();
  setTimeout(function(){dfm_box.dialog('open');});
}
function dialogStyle() {
  $('.ui-dialog-titlebar-close').css({'background':'transparent','border':'none','font-size':'1.8rem','margin-top':'-14px','margin-right':'-18px'}).html('<i class="fa fa-window-minimize"></i>').prop('title',"_(Minimize)_").prop('onclick',null).off('click').click(function(){$('#countdown').show();dfm_box.dialog('close');});
  $('.ui-dialog-title').css({'text-align':'center','width':'100%','font-size':'1.8rem'});
  $('.ui-dialog-content').css({'padding-top':'15px','vertical-align':'bottom'});
  $('.ui-button-text').css({'padding':'0px 5px'});
}
function fileName(file) {
  return file.indexOf('/')>=0 ? file.split('/').pop() : file;
}
function fileExtension(file) {
  file = fileName(file);
  return file.indexOf('.')>=0 ? file.split('.').pop() : '';
}
function fileEdit(id) {
  const known = ["","cfg","conf",<?=jsArray(file($editor,FILE_IGNORE_NEW_LINES|FILE_SKIP_EMPTY_LINES))?>];
  var source = $('#'+id.proxy()).attr('data').quote();
  var ext = fileExtension(source);
  if (ext == 'zip') {
    // download zip files
    downloadFile(source);
    return;
  }
  dfm_box = $("#dialogWindow");
  if (!known.includes(ext)) {
    // file viewer - supported file extensions: .pdf, .jpg, .png, .jpeg, .gif
    dfm_box.html($("#templateViewFile").html().replace('{$0}',source).build());
    return;
  }
  // file editor dialog
  dfm_box.html($("#templateEditFile").html().replace('{$0}',source).build());
  dfm_box.dialog({
    title: fileName(source),
    height: Math.min(window.innerHeight-80,800),
    width: Math.min(window.innerWidth,1200),
    resizable: false,
    modal: true,
    show: {effect:'fade', duration:250},
    hide: {effect:'fade', duration:250},
    buttons: {
      "_(Save)_": function(){
        $.post('/plugins/dynamix.file.manager/include/Browse.php',{mode:'save', file:encodeURIComponent(source), data:encodeURIComponent(editor.session.getValue())});
        dfm_box.dialog('close');
        setTimeout(loadList,100);
      },
      "_(Cancel)_": function(){
        dfm_box.dialog('close');
      }
    }
  });
  dialogStyle();
  $('.ui-dialog-titlebar-close').html('<i class="fa fa-expand"></i>').prop('title',"_(Expand)_").prop('onclick',null).off('click').click(function(){fullWindow();});
}
function fullWindow() {
  if ($('.ui-dialog-titlebar-close').html().indexOf('expand')>=0) {
    dfm_box.dialog('option','height',window.innerHeight-40);
    dfm_box.dialog('option','width',window.innerWidth);
    dfm_box.dialog('option','position',{my:'top',at:'top',of:window});
    $('.ui-dialog-titlebar-close').html("<i class='fa fa-compress'></i>").prop("title","_(Compress)_");
  } else {
    dfm_box.dialog('option','height',Math.min(window.innerHeight-80,800));
    dfm_box.dialog('option','width',Math.min(window.innerWidth,1200));
    dfm_box.dialog('option','position',{my:'center',at:'center',of:window});
    $('.ui-dialog-titlebar-close').html("<i class='fa fa-expand'></i>").prop("title","_(Expand)_");
  }
  editor.resize();
}
function createSelect(source) {
  var select = dfm_box.find('#source');
  if (Array.isArray(source)) {
    for (var i=0,object; object=source[i]; i++) {
      if (i < 10) {
        select.html(select.html()+'<option'+(i==0?' selected':'')+'>'+object+'</option>');
      } else {
        select.html(select.html()+'<option>&lt;_(more)_&gt; ...</option>');
        break;
      }
    }
  } else {
    select.html('<option selected>'+source+'</option>');
  }
}
<?if ($dfm_running):
extract(parse_ini_file($dfm_active));
$bulk = count(explode("\r",$source));?>
function showDialog() {
  dfm_box = $("#dialogWindow");
  switch (<?=$action?>) {
<?if ($bulk==1):?>
  case 1: // delete folder
    dfm_box.html($("#templateDeleteFolder").html());
    dfm_box.find('#source').html("<?=$source?>");
    var height = 330;
    break;
  case 3: // copy folder
    dfm_box.html($("#templateCopyFolder").html());
    dfm_box.find('#source').html("<?=$source?>");
    dfm_box.find('#target').val("<?=$target?>").prop('disabled',true);
    dfm_box.find('#sparse').prop('checked',<?=$sparse?'true':'false'?>);
    dfm_box.find('#exist').prop('checked',<?=$exist?'false':'true'?>);
    var height = 630;
    break;
  case 4: // move folder (rsync)
  case 5: // move folder (mv)
    dfm_box.html($("#templateMoveFolder").html());
    dfm_box.find('#source').html("<?=$source?>");
    dfm_box.find('#target').val("<?=$target?>").prop('disabled',true);
    dfm_box.find('#sparse').prop('checked',<?=$sparse?'true':'false'?>);
    dfm_box.find('#exist').prop('checked',<?=$exist?'false':'true'?>);
    var height = 630;
    break;
  case 6: // delete file
    dfm_box.html($("#templateDeleteFile").html());
    dfm_box.find('#source').html("<?=$source?>");
    var height = 330;
    break;
  case 8: // copy file
    dfm_box.html($("#templateCopyFile").html());
    dfm_box.find('#source').html("<?=$source?>");
    dfm_box.find('#target').val("<?=$target?>").prop('disabled',true);
    dfm_box.find('#sparse').prop('checked',<?=$sparse?'true':'false'?>);
    dfm_box.find('#exist').prop('checked',<?=$exist?'false':'true'?>);
    var height = 630;
    break;
  case 9: // move file (rsync)
  case 10: // move file (mv)
    dfm_box.html($("#templateMoveFile").html());
    dfm_box.find('#source').html("<?=$source?>");
    dfm_box.find('#target').val("<?=$target?>").prop('disabled',true);
    dfm_box.find('#sparse').prop('checked',<?=$sparse?'true':'false'?>);
    dfm_box.find('#exist').prop('checked',<?=$exist?'false':'true'?>);
    var height = 630;
    break;
  case 11: // change owner
    dfm_box.html($("#templateChangeOwner").html());
    createSelect("<?=$source?>");
    dfm_box.find('#target').prop('disabled',true);
    var height = 330;
    break;
  case 12: // change permission
    dfm_box.html($("#templateChangePermission").html());
    createSelect("<?=$source?>");
    dfm_box.find('#owner').prop('disabled',true);
    dfm_box.find('#group').prop('disabled',true);
    dfm_box.find('#other').prop('disabled',true);
    var height = 330;
    break;
<?else:?>
  case 1: // delete object
    dfm_box.html($("#templateDeleteObject").html());
    dfm_box.find('#source').html("_(Objects to delete)_: <?=$bulk?>");
    var height = 330;
    break;
  case 3: // copy object
    dfm_box.html($("#templateCopyObject").html());
    dfm_box.find('#source').html("_(Objects to copy)_: <?=$bulk?>");
    dfm_box.find('#target').val("<?=$target?>").prop('disabled',true);
    dfm_box.find('#sparse').prop('checked',<?=$sparse?'true':'false'?>);
    dfm_box.find('#exist').prop('checked',<?=$exist?'false':'true'?>);
    var height = 630;
    break;
  case 4: // move object (rsync)
  case 5: // move object (mv)
    dfm_box.html($("#templateCopyObject").html());
    dfm_box.find('#source').html("_(Objects to move)_: <?=$bulk?>");
    dfm_box.find('#target').val("<?=$target?>").prop('disabled',true);
    dfm_box.find('#sparse').prop('checked',<?=$sparse?'true':'false'?>);
    dfm_box.find('#exist').prop('checked',<?=$exist?'false':'true'?>);
    var height = 630;
    break;
  case 11: // change owner
    dfm_box.html($("#templateChangeOwner").html());
    createSelect([<?=jsArray(array_slice(explode("\r",$source),0,10))?>]);
    dfm_box.find('#source').html("_(Objects to change)_: <?=$bulk?>");
    dfm_box.find('#target').prop('disabled',true);
    var height = 330;
    break;
  case 12: // change permission
    dfm_box.html($("#templateChangePermission").html());
    createSelect([<?=jsArray(array_slice(explode("\r",$source),0,10))?>]);
    dfm_box.find('#owner').prop('disabled',true);
    dfm_box.find('#group').prop('disabled',true);
    dfm_box.find('#other').prop('disabled',true);
    var height = 330;
    break;
<?endif;?>
  }
  dfm_box.find('#sparse').prop('disabled',true);
  dfm_box.find('#exist').prop('disabled',true);
  dfm_box.find('span.sparse').css({'opacity':'0.5'});
  dfm_box.find('span.exist').css({'opacity':'0.5'});
  setTimeout(function(){$('button:first').focus();});
  dfm_box.dialog({
    title: "<?=$title?>",
    resizable: false,
    width: 900,
    height: height,
    modal: true,
    show: {effect:'fade', duration:250},
    hide: {effect:'fade', duration:250},
    buttons: {
      "_(Proceed)_": function(){
        return;
      },
      "_(Cancel)_": function(){
        dfm_box.dialog('close');
        $.post('/plugins/dynamix.file.manager/include/FileManager.php',{action:99},function(){setTimeout(loadList,500);});
        fileManager('stop');
      }
    }
  });
  dialogStyle();
}
<?endif;?>
var filemonitor = new NchanSubscriber('/sub/filemonitor',{subscriber:'websocket'});
filemonitor.on('message', function(state) {
  if (state==1 && !dfm_running && !timers.filemonitor) timers.filemonitor = setTimeout(function(){if (dfm_running) clearTimeout(timers.filemonitor); else refresh();},1500);
});
setTimeout(function(){filemonitor.start();},5000);

function doAction(action,title,id) {
  var link   = id.substr(0,1)=='/';
  var source = link ? id : data($('#'+id));
  var path   = source.substr(1).split('/');
  var zfs    = '';
<?if ($zfs):?>
  if ([1,4].includes(action) && path[0]=='mnt') {
    switch (path.length) {
    case 3:
      if (path[2]=='') zfs = path[1]+'/';
      break;
    case 4:
      if (path[3]=='') zfs = path[1]+'/'+path[2];
      break;
    }
  }
<?endif;?>
  var access = ['mnt','boot'];
  if (!access.includes(path[0])) return;
  var user   = /^(user0?|rootshare)$/.test(path[1]);
  var root   = '/'+path[0]+(user ? '/'+path[1] : '');
  var share  = user||!path[2]||(link&&path.length==3) ? '' : path[2]+'/';
  var ud     = ['disks','remotes'].includes(path[1]); // unassigned devices
  var match  = ud||user ? '' : '^(?!.*(user0?|rootshare)).*$';
  var name   = path.pop()||path.pop();
  var hdlink = "<?=$var['fuse_directio']==1?'1':''?>";
  dfm_box = $("#dialogWindow");
  switch (action) {
  case 0: // create folder
    dfm_box.html($("#templateCreateFolder").html());
    source = dir;
    var height = 330;
    break;
  case 1: // delete folder
    dfm_box.html($("#templateDeleteFolder").html());
    dfm_box.find('#source').html(source.strip());
    var height = 330;
    break;
  case 2: // rename folder
    dfm_box.html($("#templateRenameFolder").html());
    dfm_box.find('#source').html(name);
    dfm_box.find('#target').val(name);
    var height = 330;
    break;
  case 3: // copy folder
    dfm_box.html($("#templateCopyFolder").html());
    dfm_box.find('#source').html(source.strip());
    dfm_box.find('#target').attr('data-pickroot',root).attr('data-picktop',root).attr('data-pickmatch',match).fileTreeAttach(null,null,function(path){
      var bits = path.substr(1).split('/');
      var auto = bits.length>3 ? '' : share;
      dfm_box.find('#target').val(path+auto).change();
    });
    var height = 630;
    break;
  case 4: // move folder
    dfm_box.html($("#templateMoveFolder").html());
    dfm_box.find('#source').html(source.strip());
    dfm_box.find('#target').attr('data-pickroot',root).attr('data-picktop',root).attr('data-pickmatch',match).fileTreeAttach(null,null,function(path){
      var bits = path.substr(1).split('/');
      var auto = bits.length>3 ? '' : share;
      dfm_box.find('#target').val(path+auto).change();
    });
    var height = 630;
    break;
  case 6: // delete file
    dfm_box.html($("#templateDeleteFile").html());
    dfm_box.find('#source').html(source);
    var height = 330;
    break;
  case 7: // rename file
    dfm_box.html($("#templateRenameFile").html());
    dfm_box.find('#source').html(name);
    dfm_box.find('#target').val(name);
    var height = 330;
    break;
  case 8: // copy file
    dfm_box.html($("#templateCopyFile").html());
    dfm_box.find('#source').html(source);
    dfm_box.find('#target').attr('data-pickroot',root).attr('data-picktop',root).attr('data-pickmatch',match).fileTreeAttach(null,null,function(path){
      dfm_box.find('#target').val(path).change();
    });
    var height = 630;
    break;
  case 9: // move file
    dfm_box.html($("#templateMoveFile").html());
    dfm_box.find('#source').html(source);
    dfm_box.find('#target').attr('data-pickroot',root).attr('data-picktop',root).attr('data-pickmatch',match).fileTreeAttach(null,null,function(path){
      dfm_box.find('#target').val(path).change();
    });
    var height = 630;
    break;
  case 11: // change owner
    dfm_box.html($("#templateChangeOwner").html());
    var owner = $('#'+id.bring('owner')).text();
    createSelect(source.strip());
    dfm_box.find('#target').val(owner);
    var height = 330;
    break;
  case 12: // change permission
    dfm_box.html($("#templateChangePermission").html());
    var perm = $('#'+id.bring('perm')).text();
    createSelect(source.strip());
    dfm_box.find('#owner').val('u-'+perm.substr(1,2).patch());
    dfm_box.find('#group').val('g-'+perm.substr(4,2).patch());
    dfm_box.find('#other').val('o-'+perm.substr(7,2).patch());
    var height = 330;
    break;
  case 13: // download file
    downloadFile(source,name);
    return;
  case 14: // calculate occupied space
    timers.calc = setTimeout(function(){$('div.spinner.fixed').show('slow');},500);
    $.post('/plugins/dynamix.file.manager/include/Browse.php',{mode:'calc', source:encodeURIComponent(htmlspecialchars(source))},function(text){
      clearTimeout(timers.calc);
      $('div.spinner.fixed').hide('slow');
      swal({title:"_(Calculate Occupied Space)_",text:text,html:true,confirmButtonText:"_(Ok)_"});
    });
    return;
  }
  setTimeout(function(){if (dfm_box.find('#target').length) dfm_box.find('#target').focus().click(); else $('button:first').focus();});
  dfm_box.dialog({
    title: title,
    resizable: false,
    width: 900,
    height: height,
    modal: true,
    show: {effect:'fade', duration:250},
    hide: {effect:'fade', duration:250},
    buttons: {
      "_(Proceed)_": function(){
        if (dfm_running) return;
        var target = dfm_box.find('#target');
        if (target.length) {
          target = target.val();
          switch (action) {
          case 0: // create folder
          case 2: // rename folder
          case 7: // rename file
            var valid = /^[^\/]*$/; // no slashes allowed
            break;
          case 4: // move folder
          case 9: // move file
            // disallow mixing of disk and user shares
            var valid = ud ? /^\/mnt\/.+/ : (user ? /^\/mnt\/(user0?|rootshare)\/.+/ : /^\/mnt\/(?!.*(user0?|rootshare)).+$|^\/boot\/.+/);
            // check if 'mv' can be used
            if (!user && path.length > 2) {
              var mv = '/'+path[0]+'/'+path[1]+'/'+path[2];
              if (target.substr(0,mv.length) == mv) action++;
            }
            break;
          case 11: // change owner
            var valid = /.+/;
            target += (target=='root' ? ':root' : ':users');
            break;
          case 12: // change permission
            var valid = /.+/;
            target = [];
            target.push(dfm_box.find('#owner').val());
            target.push(dfm_box.find('#group').val());
            target.push(dfm_box.find('#other').val());
            target = target.join(',')+',ugo+X';
            break;
          default:
            // disallow mixing of disk and user shares
            var valid = ud ? /^\/mnt\/.+/ : (user ? /^\/mnt\/(user0?|rootshare)\/.+/ : /^\/mnt\/(?!.*(user0?|rootshare)).+$|^\/boot\/.+/);
            break;
          }
          if (!target || !valid.test(target)) {errorTarget(); return;}
        } else target = '';
        $('span.dfm_text').removeClass('orange-text').html("_(Running)_...");
        dfm_box.find('#target').prop('disabled',true);
        dfm_box.find('#sparse').prop('disabled',true);
        dfm_box.find('#exist').prop('disabled',true);
        dfm_box.find('span.sparse').css({'opacity':'0.5'});
        dfm_box.find('span.exist').css({'opacity':'0.5'});
        if (action==11) {
          dfm_box.find('#owner').prop('disabled',true);
          dfm_box.find('#group').prop('disabled',true);
          dfm_box.find('#other').prop('disabled',true);
        }
        fileManager('start');
        $.post('/plugins/dynamix.file.manager/include/FileManager.php',{action:action,title:encodeURIComponent(title),source:encodeURIComponent(source),target:encodeURIComponent(target),hdlink:hdlink,sparse:dfm_box.find('#sparse').val(),exist:dfm_box.find('#exist').val(),zfs:encodeURIComponent(zfs)});
      },
      "_(Cancel)_": function(){
        if (dfm_running) $.post('/plugins/dynamix.file.manager/include/FileManager.php',{action:99},function(){setTimeout(loadList,500);});
        fileManager('stop');
        dfm_box.dialog('close');
      }
    }
  });
  dialogStyle();
}
function doActions(action,title) {
  var source = [], type = [], owner = [], perm = [], zfs = [];
  if (action > 0 && action != 15) {
    $('i[id^="check_"]').each(function(){
      if ($(this).prop('id')!='check_0' && $(this).hasClass('fa-check-square-o')) {
        var id = $(this).prop('id');
        source.push(data($('#'+id.fetch('row'))));
        type.push($('#'+id.fetch('row')).attr('type'));
        owner.push($('#'+id.fetch('owner')).text());
        perm.push($('#'+id.fetch('perm')).text());
      }
    });
    var bulk   = source.length > 1;
    var path   = source[0].substr(1).split('/');
    var access = ['mnt','boot'];
    if (!access.includes(path[0])) return;
    var user   = /^(user0?|rootshare)$/.test(path[1]);
    var root   = '/'+path[0]+(user ? '/'+path[1] : '');
    var share  = user||!path[2] ? '' : path[2]+'/';
    var ud     = ['disks','remotes'].includes(path[1]); // unassigned devices
    var match  = ud||user ? '' : '^(?!.*(user0?|rootshare)).*$';
    var name   = path.pop()||path.pop();
    var hdlink = "<?=$var['fuse_directio']==1?'1':''?>";
    var u      = false;
    var d      = false;
    if (bulk) {
      for (var i=0,s; s=source[i]; i++) {
        s = s.strip();
        source[i] = s;
        var p = s.substr(1).split('/');
        if (/^user0?$/.test(p[1])) u = true; else d = true;
<?if ($zfs):?>
        if ([1,4].includes(action) && p[0]=='mnt' && type[i]=='d') {
          switch (p.length) {
          case 2:
            zfs.push(p[1]+'/');
            break;
          case 3:
            zfs.push(p[1]+'/'+p[2]);
            break;
          }
        }
      }
    } else {
      var p = source[0].substr(1).strip().split('/');
      if ([1,4].includes(action) && p[0]=='mnt' && type[0]=='d') {
        switch (p.length) {
        case 2:
          zfs.push(p[1]+'/');
          break;
        case 3:
          zfs.push(p[1]+'/'+p[2]);
          break;
        }
<?endif;?>
      }
    }
    if (u && d) {errorSource(); return;} // disallow mixing of disk and user shares
  }
  dfm_box = $("#dialogWindow");
  switch (action) {
  case 0: // create folder
    dfm_box.html($("#templateCreateFolder").html());
    source[0] = dir;
    var height = 330;
    break;
  case 1: // delete object
    dfm_box.html($("#templateDeleteObject").html());
    createSelect(source);
    var height = 330;
    break;
  case 2: // rename object
    if (!bulk) {
      dfm_box.html($("#templateRenameObject").html());
      dfm_box.find('#source').html(name);
      dfm_box.find('#target').val(name);
      var height = 330;
    } else {
      dfm_box.html($("#templateMoveObject").html());
      createSelect(source);
      dfm_box.find('#target').attr('data-pickroot',root).attr('data-picktop',root).attr('data-pickmatch',match).attr('data-pickfilter','HIDE_FILES_FILTER');
      dfm_box.find('#target').fileTreeAttach(null,null,function(path){
        var bits = path.substr(1).split('/');
        var auto = bits.length>3 ? '' : share;
        dfm_box.find('#target').val(path+auto).change();
      });
      action = 4; // change to move operation
      var height = 630;
    }
    break;
  case 3: // copy object
    dfm_box.html($("#templateCopyObject").html());
    createSelect(source);
    dfm_box.find('#target').attr('data-pickroot',root).attr('data-picktop',root).attr('data-pickmatch',match);
    if (bulk || type[0]=='d') dfm_box.find('#target').attr('data-pickfilter','HIDE_FILES_FILTER');
    dfm_box.find('#target').fileTreeAttach(null,null,function(path){
      var bits = path.substr(1).split('/');
      var auto = bulk || bits.length>3 ? '' : (type[0]=='d' ? share : '');
      dfm_box.find('#target').val(path+auto).change();
    });
    var height = 630;
    break;
  case 4: // move object
    dfm_box.html($("#templateMoveObject").html());
    createSelect(source);
    dfm_box.find('#target').attr('data-pickroot',root).attr('data-picktop',root).attr('data-pickmatch',match);
    if (bulk || type[0]=='d') dfm_box.find('#target').attr('data-pickfilter','HIDE_FILES_FILTER');
    dfm_box.find('#target').fileTreeAttach(null,null,function(path){
      var bits = path.substr(1).split('/');
      var auto = bulk || bits.length>3 ? '' : (type[0]=='d' ? share : '');
      dfm_box.find('#target').val(path+auto).change();
    });
    var height = 630;
    break;
  case 11: // change owner
    dfm_box.html($("#templateChangeOwner").html());
    createSelect(source);
    if (!bulk) dfm_box.find('#target').val(owner[0]);
    var height = 330;
    break;
  case 12: // change permission
    dfm_box.html($("#templateChangePermission").html());
    createSelect(source);
    if (!bulk) {
      dfm_box.find('#owner').val('u-'+perm[0].substr(1,2).patch());
      dfm_box.find('#group').val('g-'+perm[0].substr(4,2).patch());
      dfm_box.find('#other').val('o-'+perm[0].substr(7,2).patch());
    }
    var height = 330;
    break;
  case 14: // calculate occupied space
    timers.calc = setTimeout(function(){$('div.spinner.fixed').show('slow');},500);
    $.post('/plugins/dynamix.file.manager/include/Browse.php',{mode:'calc', source:encodeURIComponent(htmlspecialchars(source.join('\n')))},function(text){
      clearTimeout(timers.calc);
      $('div.spinner.fixed').hide('slow');
      swal({title:"_(Calculate Occupied Space)_",text:text,html:true,confirmButtonText:"_(Ok)_"});
    });
    return;
  case 15: // search
    source[0] = dir;
    dfm_box.html($("#templateSearch").html());
    dfm_box.find('span.dfm_loc').html('&nbsp;').css({'line-height':'normal'});
    dfm_box.find('span.dfm_text').html('').css({'line-height':'normal'});
    var height = 630;
    break;
  }
  dfm_box.find('select#source').attr('size',Math.min(tsize[action],source.length));
  setTimeout(function(){if (dfm_box.find('#target').length) dfm_box.find('#target').focus().click(); else $('button:first').focus();});
  dfm_box.dialog({
    title: title,
    resizable: false,
    width: 900,
    height: height,
    modal: true,
    show: {effect:'fade', duration:250},
    hide: {effect:'fade', duration:250},
    buttons: {
      "_(Proceed)_": function(){
        if (dfm_running) return;
        var target = dfm_box.find('#target');
        if (target.length) {
          target = target.val();
          switch (action) {
          case 0: // create folder
            bulk = false;
          case 2: // rename object
            var valid = /^[^\/]*$/; // no slashes allowed
            break;
          case 4: // move object
            // disallow mixing of disk and user shares
            var valid = ud ? /\/mnt\/.+/ : (user ? /^\/mnt\/(user0?|rootshare)\/.+/ : /^\/mnt\/(?!.*(user0?|rootshare)).+$|^\/boot\/.+/);
            // check if 'mv' can be used
            if (!user && path.length > 2) {
              var mv = '/'+path[0]+'/'+path[1]+'/'+path[2];
              if (target.substr(0,mv.length) == mv) action++;
            }
            break;
          case 11: // change owner
            var valid = /.+/;
            target += (target=='root' ? ':root' : ':users');
            bulk = false;
            break;
          case 12: // change permission
            var valid = /.+/;
            target = [];
            target.push(dfm_box.find('#owner').val());
            target.push(dfm_box.find('#group').val());
            target.push(dfm_box.find('#other').val());
            target = target.join(',')+',ugo+X';
            bulk = false;
            break;
          case 15: // search
            var valid = /.+/;
            bulk = false;
            break;
          default:
            // disallow mixing of disk and user shares
            var valid = ud ? /\/mnt\/.+/ : (user ? /^\/mnt\/(user0?|rootshare)\/.+/ : /^\/mnt\/(?!.*(user0?|rootshare)).+$|^\/boot\/.+/);
            break;
          }
          if (!target || !valid.test(target)) {errorTarget(); return;}
        } else target = '';
        if (bulk && target.length>0 && target.substr(-1)!='/') target += '/';
        dfm_box.find('#target').prop('disabled',true);
        dfm_box.find('#sparse').prop('disabled',true);
        dfm_box.find('#exist').prop('disabled',true);
        dfm_box.find('span.sparse').css({'opacity':'0.5'});
        dfm_box.find('span.exist').css({'opacity':'0.5'});
        if (action==12) {
          dfm_box.find('#owner').prop('disabled',true);
          dfm_box.find('#group').prop('disabled',true);
          dfm_box.find('#other').prop('disabled',true);
        }
        if (action==15) $('span.dfm_loc').html('&nbsp;');
        $('span.dfm_text').removeClass('orange-text').html("_(Running)_...");
        fileManager('start');
        $.post('/plugins/dynamix.file.manager/include/FileManager.php',{action:action,title:encodeURIComponent(title),source:encodeURIComponent(source.join('\r')),target:encodeURIComponent(target),hdlink:hdlink,sparse:dfm_box.find('#sparse').val(),exist:dfm_box.find('#exist').val(),zfs:encodeURIComponent(zfs.join('\r'))});
      },
      "_(Cancel)_": function(){
        if (dfm_running) $.post('/plugins/dynamix.file.manager/include/FileManager.php',{action:99},function(){setTimeout(loadList,500);});
        fileManager('stop');
        dfm_box.dialog('close');
      }
    }
  });
  dialogStyle();
}
function stopUpload(file,error) {
  window.onbeforeunload = null;
  $.post('/plugins/dynamix.file.manager/include/Browse.php',{file:encodeURIComponent(htmlspecialchars(file)),mode:'stop'});
  $('#uploadButton').val("_(Upload)_").prop('onclick',null).off('click').click(function(){$('#upload').click();});
  $('#uploadStatus').html('');
  $('#upload').val('');
  dfm_running = false;
  loadList();
  if (error) setTimeout(function(){swal({title:"_(Upload Error)_",text:"_(File is removed)_",html:true,confirmButtonText:"_(Ok)_"});},200);
}
function downloadFile(source) {
  var a = document.createElement('a');
  a.setAttribute('href',source);
  a.setAttribute('download',source.split('/').pop());
  a.style.display = 'none';
  document.body.appendChild(a);
  a.click();
  document.body.removeChild(a);
}
function uploadFile(files,index,start,time) {
  var file = files[index];
  var slice = 2097152; // 2M
  var next = start + slice;
  var blob = file.slice(start, next);
  reader.onloadend = function(e){
    if (e.target.readyState !== FileReader.DONE) return;
    $.post('/plugins/dynamix.file.manager/include/Browse.php',{mode:'upload', file:encodeURIComponent(dir+'/'+htmlspecialchars(file.name)), start:start, data:window.btoa(e.target.result), cancel:cancel},function(reply){
      if (reply=='stop') {stopUpload(file.name); return;}
      if (reply=='error') {stopUpload(file.name,true); return;}
      if (next < file.size) {
        var total = 0;
        for (var i=0,f; f=files[i]; i++) {
          if (i < index) start += f.size;
          total += f.size;
        }
        const d = new Date();
        var speed = autoscale(((start + slice) * 8) / (d.getTime() - time));
        var percent = Math.floor((start + slice) / total * 100);
        $('#uploadStatus').html("_(Uploading)_: <span class='percent'>"+percent+"%</span><span class='speed'>Speed: "+speed+"</span><span class='orange-text'> ["+(index+1)+'/'+files.length+']&nbsp;&nbsp;'+file.name+"</span>");
        uploadFile(files,index,next,time);
      } else if (index < files.length-1) {
        uploadFile(files,index+1,0,time);
      } else {stopUpload(file.name); return;}
    });
  };
  reader.readAsBinaryString(blob);
}
var reader = {};
var cancel = 0;

function startUpload(files) {
  if (files.length==0) return;
  reader = new FileReader();
  window.onbeforeunload = function(e){return '';};
  $('#uploadButton').val("_(Cancel)_").prop('onclick',null).off('click').click(function(){cancel=1;});
  dfm_running = true;
  const d = new Date();
  uploadFile(files,0,0,d.getTime());
}
function filter(ext) {
  $('td.ext').each(function(){
    if ($(this).attr('data').search(ext)==-1) $(this).parent().hide(); else $(this).parent().show();
  });
}
function toggleTime(init) {
  $('.my_time').toggle();
  $('.my_age').toggle();
  if (init) return;
  $.cookie('my_time')==null ? $.cookie('my_time','age') : $.removeCookie('my_time');
}
function loadList() {
  var col = $.cookie('col')||2;
  var ord = $.cookie('dir')||0;
  $('#check_0').removeClass('fa-check-square-o').addClass('fa-square-o');
  timers.browse = setTimeout(function(){$('div.spinner.fixed').show();},500);
  $.get('/plugins/dynamix.file.manager/include/Browse.php',{dir:encodeURIComponent(dir),path:"<?=$path?>"},function(data){
    clearTimeout(timers.browse);
    $('div.spinner.fixed').hide();
    table.find('tbody,tfoot').remove();
    thead.after(data);
<?if ($isshare):?>
    var max = 0;
    $('tbody tr').each(function(){if ($(this).height() > max) max = $(this).height();}).each(function(){$(this).height(max);});
<?endif;?>
    table.tablesorter({headers:{0:{sorter:false},8:{sorter:false}},sortList:[[col,ord],[2,0]],sortAppend:[[2,0]],textAttribute:'data'});
    table.trigger('update',[true]);
    if ($.cookie('my_time')!=null) toggleTime(true);
  });
}
function xlink(link) {
  swal({title:'',text:decodeURIComponent(link),html:true,confirmButtonText:"_(Ok)_"});
}
$(function(){
  caPluginUpdateCheck('dynamix.file.manager.plg',{name:'Dynamix File Manager'});
  var dirs = dir.split('/'), url = [];
  if (dirs.length > 1) {
    for (var n=1; n < dirs.length; n++) {
      var subdir = dirs.slice(1,n+1);
      url.push('<a class="none" href="/<?=$path?>?dir=/'+encodeURIComponent(subdir.join('/'))+'" oncontextmenu="xlink(\'/'+encodeURIComponent(subdir.join('/'))+'\');return false">'+(n==1 ? '<i class="fa fa-home"></i>' : dirs[n])+'</a>');
    }
  } else {
    url.push('<i class="fa fa-home red-text"></i>');
  }
  $('span.left').html(url.join('<i class="fa fa-chevron-right"></i>')).append('<span class="right"><span class="filter"><input type="text" class="filter" oninput="filter(this.value)" autocomplete="off" spellcheck="false" placeholder="_(file type)_"><i class="fa fa-filter"></i></span><i class="fa fa-toggle-off" onclick="toggleTime()" style="cursor:pointer;margin-left:20px" title="_(Toggle Time/Age display)_"></i></span>');
  table = $('table.indexer');
  thead = table.find('thead');
  table.bind('sortEnd',function(e,t){
    var sort = e.target.config.sortList.toString().split(',');
    $.cookie('col',sort[0]);
    $.cookie('dir',sort[1]);
  });
<?if ($display['resize']):?>
  resize();
  $(window).bind('resize',function(){resize();});
<?endif;?>
  loadList();
<?if ($dfm_running):?>
  showDialog();
<?endif;?>
$('#countdown').hide();
});
</script>
<div class="autoheight">
<table class="indexer tablesorter shift"><thead><tr><th><?if($dir){?><i id="check_0" class="fa fa-fw fa-square-o" onclick="selectAll()"></i><?}?></th><th>_(Type)_</th><th class='sorter-text'>_(Name)_</th><th>_(Owner)_</th><th>_(Permission)_</th><th>_(Size)_</th><th>_(Last Modified)_</th><th style="width:200px">_(Location)_</th><th>_(Action)_</th></tr></thead></table>
</div>
<input type="button" value="_(Done)_" onclick="done('Browse')">
<input type="button" value="_(Search)_" onclick="doActions(15,this.value)">
<input type="button" value="_(Delete)_" class="extra" onclick="doActions(1,this.value)" disabled>
<input type="button" value="_(Copy)_" class="extra" onclick="doActions(3,this.value)" disabled>
<input type="button" value="_(Move)_" class="extra" onclick="doActions(4,this.value)" disabled>
<input type="button" value="_(Rename)_" class="rename" onclick="doActions(2,this.value)" disabled>
<input type="button" value="_(Owner)_" class="extra" onclick="doActions(11,this.value)" disabled>
<input type="button" value="_(Permission)_" class="extra" onclick="doActions(12,this.value)" disabled>
<input type="button" value="_(Calculate)_" class="extra" onclick="doActions(14,this.value)" disabled>
<input type="button" value="_(Create)_" onclick="doActions(0,this.value)"<?if(!$dir||$isshare){?> disabled<?}?>>
<input type="button" value="_(Upload)_" id="uploadButton" onclick="$('#upload').click()"<?if (!$dir||$isshare){?> disabled<?}?>><span id="uploadStatus"></span>

<input type="file" id="upload" value="" onchange="startUpload(this.files)" multiple>
<div id="dialogWindow"></div>

<div markdown="1" id="templateCreateFolder" class="template">
&nbsp;
: &nbsp;

_(New folder name)_:
: <input type="text" id="target" autocomplete="off" spellcheck="false" value="">

&nbsp;
: <span class="dfm_text"></span>

<div class="info"><i class="fa fa-warning"></i>_(This creates a folder at the current level)_</div>
</div>

<div markdown="1" id="templateDeleteFolder" class="template">
<?=_("$Folder name")?>:
: <span id="source"></span>

&nbsp;
: <span class="dfm_text"></span>

<div class="info"><i class="fa fa-warning"></i><?=_("This deletes the $folder and all its content")?></div>
</div>

<div markdown="1" id="templateRenameFolder" class="template">
_(Current folder name)_:
: <span id="source"></span>

&nbsp;
: _(rename to)_ ...

_(New folder name)_:
: <input type="text" id="target" autocomplete="off" spellcheck="false" value="">

&nbsp;
: <span class="dfm_text"></span>

<div class="info"><i class="fa fa-warning"></i>_(This renames the folder to the new name)_</div>
</div>

<div markdown="1" id="templateCopyFolder" class="template">
<?=_("Source $folder")?>:
: <span id="source"></span>

&nbsp;
: _(copy to)_ ...

<?=_("Target $folder")?>:
: <input type="text" id="target" autocomplete="off" spellcheck="false" value="" data-pickcloseonfile="true" data-pickfolders="true" data-pickfilter="HIDE_FILES_FILTER" data-pickmatch="" data-pickroot="" data-picktop="">

<input type="checkbox" id="sparse" value="" onchange="this.value=this.checked?'1':''"><span class="sparse">_(Use sparse option)_</span>
: &nbsp;

<input type="checkbox" id="exist" value="" onchange="this.value=this.checked?'1':''"><span class="exist">_(Overwrite existing files)_</span>
: <span class="dfm_text"></span>

<div class="info"><i class="fa fa-warning"></i><?=_("This copies the $folder and all its content to another $folder")?></div>
</div>

<div markdown="1" id="templateMoveFolder" class="template">
<?=_("Source $folder")?>:
: <span id="source"></span>

&nbsp;
: _(move to)_ ...

<?=_("Target $folder")?>:
: <input type="text" id="target" autocomplete="off" spellcheck="false" value="" data-pickcloseonfile="true" data-pickfolders="true" data-pickfilter="HIDE_FILES_FILTER" data-pickmatch="" data-pickroot="" data-picktop="">

<input type="checkbox" id="sparse" value="" onchange="this.value=this.checked?'1':''"><span class="sparse">_(Use sparse option)_</span>
: &nbsp;

<input type="checkbox" id="exist" value="" onchange="this.value=this.checked?'1':''"><span class="exist">_(Overwrite existing files)_</span>
: <span class="dfm_text"></span>

<div class="info"><i class="fa fa-warning"></i><?=_("This moves the $folder and all its content to another $folder")?></div>
</div>

<div markdown="1" id="templateDeleteFile" class="template">
_(File name)_:
: <span id="source"></span>

&nbsp;
: <span class="dfm_text"></span>

<div class="info"><i class="fa fa-warning"></i>_(This deletes the selected file)_</div>
</div>

<div markdown="1" id="templateRenameFile" class="template">
_(Current file name)_:
: <span id="source"></span>

&nbsp;
: _(rename to)_ ...

_(New file name)_:
: <input type="text" id="target" autocomplete="off" value="">

&nbsp;
: <span class="dfm_text"></span>

<div class="info"><i class="fa fa-warning"></i>_(This renames the selected file)_</div>
</div>

<div markdown="1" id="templateCopyFile" class="template">
_(Source file)_:
: <span id="source"></span>

&nbsp;
: _(copy to)_ ...

_(Target file)_:
: <input type="text" id="target" autocomplete="off" spellcheck="false" value="" data-pickcloseonfile="true" data-pickfolders="true" data-pickfilter="" data-pickmatch="" data-pickroot="" data-picktop="">

<input type="checkbox" id="sparse" value="" onchange="this.value=this.checked?'1':''"><span class="sparse">_(Use sparse option)_</span>
: &nbsp;

<input type="checkbox" id="exist" value="" onchange="this.value=this.checked?'1':''"><span class="exist">_(Overwrite existing files)_</span>
: <span class="dfm_text"></span>

<div class="info"><i class="fa fa-warning"></i>_(This copies the selected file)_</div>
</div>

<div markdown="1" id="templateMoveFile" class="template">
_(Source file)_:
: <span id="source"></span>

&nbsp;
: _(move to)_ ...

_(Target file)_:
: <input type="text" id="target" autocomplete="off" spellcheck="false" value="" data-pickcloseonfile="true" data-pickfolders="true" data-pickfilter="" data-pickmatch="" data-pickroot="" data-picktop="">

<input type="checkbox" id="sparse" value="" onchange="this.value=this.checked?'1':''"><span class="sparse">_(Use sparse option)_</span>
: &nbsp;

<input type="checkbox" id="exist" value="" onchange="this.value=this.checked?'1':''"><span class="exist">_(Overwrite existing files)_</span>
: <span class="dfm_text"></span>

<div class="info"><i class="fa fa-warning"></i>_(This moves the selected file)_</div>
</div>

<div markdown="1" id="templateDeleteObject" class="template">
_(Source)_:
: <select id="source"></select>

&nbsp;
: <span class="dfm_text"></span>

<div class="info"><i class="fa fa-warning"></i>_(This deletes all selected sources)_</div>
</div>

<div markdown="1" id="templateRenameObject" class="template">
_(Source)_:
: <span id="source"></span>

&nbsp;
: _(rename to)_ ...

_(Target)_:
: <input type="text" id="target" autocomplete="off" spellcheck="false" value="">

<div class="info"><i class="fa fa-warning"></i>_(This renames the selected source)_</div>
</div>

<div markdown="1" id="templateCopyObject" class="template">
_(Source)_:
: <select id="source"></select>

&nbsp;
: _(copy to)_ ...

_(Target)_:
: <input type="text" id="target" autocomplete="off" spellcheck="false" value="" data-pickcloseonfile="true" data-pickfolders="true" data-pickfilter="" data-pickmatch="" data-pickroot="" data-picktop="">

<input type="checkbox" id="sparse" value="" onchange="this.value=this.checked?'1':''"><span class="sparse">_(Use sparse option)_</span>
: &nbsp;

<input type="checkbox" id="exist" value="" onchange="this.value=this.checked?'1':''"><span class="exist">_(Overwrite existing files)_</span>
: <span class="dfm_text"></span>

<div class="info"><i class="fa fa-warning"></i>_(This copies all the selected sources)_</div>
</div>

<div markdown="1" id="templateMoveObject" class="template">
_(Source)_:
: <select id="source"></select>

&nbsp;
: _(move to)_ ...

_(Target)_:
: <input type="text" id="target" autocomplete="off" spellcheck="false" value="" data-pickcloseonfile="true" data-pickfolders="true" data-pickfilter="" data-pickmatch="" data-pickroot="" data-picktop="">

<input type="checkbox" id="sparse" value="" onchange="this.value=this.checked?'1':''"><span class="sparse">_(Use sparse option)_</span>
: &nbsp;

<input type="checkbox" id="exist" value="" onchange="this.value=this.checked?'1':''"><span class="exist">_(Overwrite existing files)_</span>
: <span class="dfm_text"></span>

<div class="info"><i class="fa fa-warning"></i>_(This moves all the selected sources)_</div>
</div>

<div markdown="1" id="templateChangeOwner" class="template">
_(Source)_:
: <select id="source"></select>

&nbsp;
: _(change owner)_ ...

_(New owner)_:
: <select id="target">
<?foreach ($users as $user) echo mk_option(0,$user['name'],$user['name']);
  echo mk_option(0,'nobody','nobody');
?></select>

&nbsp;
: <span class="dfm_text"></span>

<div class="info"><i class="fa fa-warning"></i>_(This changes the owner of the source recursively)_</div>
</div>

<div markdown="1" id="templateChangePermission" class="template">
_(Source)_:
: <select id="source"></select>

&nbsp;
: _(change permission)_ ...

_(New permission)_:
: <input type="hidden" id="target" value="">
  _(Owner)_:<select id="owner" class="narrow">
  <?=mk_option(0,'u-rwx',_('No Access'))?>
  <?=mk_option(0,'u-wx+r',_('Read-only'))?>
  <?=mk_option(0,'u-x+rw',_('Read/Write'))?>
  </select>
  _(Group)_:<select id="group" class="narrow">
  <?=mk_option(0,'g-rwx',_('No Access'))?>
  <?=mk_option(0,'g-wx+r',_('Read-only'))?>
  <?=mk_option(0,'g-x+rw',_('Read/Write'))?>
  </select>
  _(Other)_:<select id="other" class="narrow">
  <?=mk_option(0,'o-rwx',_('No Access'))?>
  <?=mk_option(0,'o-wx+r',_('Read-only'))?>
  <?=mk_option(0,'o-x+rw',_('Read/Write'))?>
  </select>

&nbsp;
: <span class="dfm_text"></span>

<div class="info"><i class="fa fa-warning"></i>_(This changes the permission of the source recursively)_</div>
</div>

<div markdown="1" id="templateSearch" class="template">
_(Search string)_:
: <input type="text" id="target" autocomplete="off" spellcheck="false" value="">

<span class="dfm_loc">&nbsp;</span>
: <span class="dfm_text"></span>

</div>

<div markdown="1" id="templateEditFile" class="template">
<!--!
<style>div#editor{position:absolute;top:0;bottom:0;left:0;right:0}</style>
<div id="editor"></div>
<script src="<?autov('/plugins/dynamix.file.manager/javascript/ace/ace.js')?>"></script>
<script src="<?autov('/plugins/dynamix.file.manager/javascript/ace/ext-modelist.js')?>"></script>
<script>
function getMode(file){
  var modelist = require('ace/ext/modelist');
  return modelist.getModeForPath(file).mode;
}
var source = "{$0}";
var editor = ace.edit('editor');
editor.session.setMode(getMode(source));
editor.setOptions({
  showPrintMargin:false,
  fontSize:13,
  fontFamily:'bitstream',
  theme:'ace/theme/<?if (in_array($theme,['black','gray'])):?>tomorrow_night<?else:?>tomorrow<?endif;?>'
});
timers.editor = setTimeout(function(){$('div.spinner.fixed').show();},500);
$.post('/plugins/dynamix.file.manager/include/Browse.php',{mode:'edit', file:encodeURIComponent(source)},function(data){
  clearTimeout(timers.editor);
  $('div.spinner.fixed').hide();
  editor.session.setValue(data);
});
</script>
!-->
</div>

<div markdown="1" id="templateViewFile" class="template">
<!--!
<img id="viewer" href="{$0}">
<script src="<?autov('/plugins/dynamix.file.manager/javascript/EZView.js')?>"></script>
<script>
$('#viewer').EZView();
$('#viewer').click();
</script>
!-->
</div>
